plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.github.node-gradle.node" version "3.1.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

allprojects {
	repositories {
		maven { url 'https://jitpack.io' }
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java:8.0.26'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	implementation 'com.github.thelinmichael:spotify-web-api-java:master-SNAPSHOT'

	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	implementation 'com.github.scribejava:scribejava-apis:8.3.3'
	implementation 'com.github.scribejava:scribejava-core:8.3.3'

	implementation 'org.jsoup:jsoup:1.14.3'
}

tasks.named('test') {
	useJUnitPlatform()
}



// npm install
task appNpmInstall(type: NpmTask) {
	workingDir = file("${project.projectDir}/src/main/front")
	args = ["install"]
}

// npm build
task npmBuild(type: NpmTask) {
	workingDir = file("${project.projectDir}/src/main/front")
	args = ["run", "build"]
}

// 빌드된 결과 이동
task copyWebApp(type: Copy) {
	from "${project.projectDir}/src/main/front/build"
	into "${project.projectDir}/src/main/resources/static/"
}


npmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn npmBuild
compileJava.dependsOn copyWebApp