1. useRef
useRef 함수는 current 속성을 가지고 있는 객체를 반환하는데, 
인자로 넘어온 초기값을 current 속성에 할당합니다. 
이 current 속성은 값을 변경해도 상태를 변경할 때 처럼 React 컴포넌트가 
다시 랜더링되지 않습니다. React 컴포넌트가 다시 랜더링될 때도 마찬가지로 
이 current 속성의 값이 유실되지 않습니다.

useRef 훅 함수가 반환하는 객체의 이러한 독특한 성질을 이용하여 
startCounter()와 stopCounter() 함수를 구현해보았습니다.

참조 : https://www.daleseo.com/react-hooks-use-ref/

2. useState
State란 컴포넌트가 가질 수 있는 상태.
setState 함수를 이용해서 state의 갑승ㄹ 변경하면 해당 컴포넌트는 다시
렌더링 되어서 state가 변경될 때마다 화면이 업데이트 됨

변수선언법
const [state, seState] = useState(초기값);
state의 생성과 동시에 가져야 할 초기값을 useState 함수의 인자로 넣어주면
state와 setState라는 두 가지 요소를 배열 형태로 리턴해줌
state명은 알아서, 두번째 요소에는 set을 붙여주면 됨

변수 재선언
state의 값을 변경할 경우, setState를 불러서 변경될 값을 넣어주면됨
ex) setState(1);
